[Unit]
Description=MesosMaster @ %i
Requires=docker.service
After=docker.service bootstrap.service zk-health.service

[Service]
Environment="IMAGE=etcdctl get /images/mesos-master"
Environment="ZK_USERNAME=etcdctl get /zookeeper/config/username"
Environment="ZK_PASSWORD=etcdctl get /zookeeper/config/password"
Environment="ZK_ENDPOINT=etcdctl get /zookeeper/config/endpoint"
# NODE_PRODUCT & NODE_TIER should be defined here.
EnvironmentFile=/etc/environment

User=core
Restart=always
RestartSec=8
TimeoutStartSec=0

ExecStartPre=/usr/bin/systemctl is-active update-os.service
ExecStartPre=/usr/bin/systemctl is-active zk-health.service
ExecStartPre=/usr/bin/bash -c "if [ ! -f /opt/mesos/credentials ]; then exit 1; fi"
ExecStartPre=/usr/bin/sh -c "docker pull $($IMAGE)"
ExecStartPre=-/usr/bin/docker kill mesos-master
ExecStartPre=-/usr/bin/docker rm mesos-master

ExecStart=/usr/bin/bash -c "sudo docker run \
  --name=mesos-master \
  --privileged \
  --net=host \
  -v /var/lib/mesos/master:/var/lib/mesos/master \
  -v /opt/mesos/credentials:/opt/mesos/credentials:ro \
  $($IMAGE) \
  --authenticate_slaves \
  --authenticate \
  --credentials=/opt/mesos/credentials \
  --cluster=$NODE_PRODUCT-$NODE_TIER \
  --hostname=$(curl -s http://169.254.169.254/latest/meta-data/local-hostname) \
  --log_dir=/var/log/mesos \
  --quorum=3 \
  --work_dir=/var/lib/mesos/master \
  --zk=zk://$($ZK_USERNAME):$($ZK_PASSWORD)@$($ZK_ENDPOINT)/mesos"

ExecStop=-/usr/bin/docker stop mesos-master

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=false
MachineMetadata=role=control
MachineMetadata=ip=%i
