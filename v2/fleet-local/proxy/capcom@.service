[Unit]
Description=Capcom @ %i
After=docker.service proxy@%i.service
Requires=docker.service

[Service]
User=core
Restart=on-failure
RestartSec=20
TimeoutStartSec=0
Environment="IMAGE=etcdctl get /images/capcom"

ExecStartPre=/usr/bin/sh -c "source /etc/profile.d/etcdctl.sh && docker pull $($IMAGE)"
ExecStartPre=-/usr/bin/docker kill capcom
ExecStartPre=-/usr/bin/docker rm capcom

# NOTE: it's critical to source the etcdctl.sh file so that etcd connects to the correct cluster.
ExecStart=/usr/bin/sh -c "source /etc/profile.d/etcdctl.sh && \
  docker run \
    --name capcom \
    --net='host' \
    --privileged \
    -e LOG_APP_NAME=capcom \
    -e CP_APPLICATIONS=`etcdctl get /CP/CP_APPLICATIONS` \
    -e CP_HOST=`etcdctl get /CP/CP_HOST` \
    -e CP_DB_PATH=`etcdctl get /CP/CP_DB_PATH` \
    -e CP_KV_STORE_SERVER_ADDRESS=`etcdctl get /CP/CP_KV_STORE_SERVER_ADDRESS` \
    -e CP_KV_TTL=`etcdctl get /CP/CP_KV_TTL` \
    -e CP_LOG_LEVEL=`etcdctl get /CP/CP_LOG_LEVEL` \
    -e CP_LOG_LOCATION=`etcdctl get /CP/CP_LOG_LOCATION` \
    -e CP_PORT=`etcdctl get /CP/CP_PORT` \
    -e CP_PROXY=`etcdctl get /CP/CP_PROXY` \
    -e CP_PROXY_CONFIG_FILE=`etcdctl get /CP/CP_PROXY_CONFIG_FILE` \
    -e CP_PROXY_ENABLED=`etcdctl get /CP/CP_PROXY_ENABLED` \
    -e CP_PROXY_RESTART_SCRIPT=`etcdctl get /CP/CP_PROXY_RESTART_SCRIPT` \
    -e CP_PROXY_TIMEOUT=`etcdctl get /CP/CP_PROXY_TIMEOUT` \
    $($IMAGE)"

ExecStop=-/usr/bin/docker stop capcom
ExecStop=/usr/bin/fleetctl destroy capcom@%i

[Install]
WantedBy=multi-user.target

[X-Fleet]
Global=false
MachineMetadata=role=proxy
MachineMetadata=ip=%i
